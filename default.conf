input {

	rabbitmq {
		codec => "plain"
		host => "192.168.1.7"
		port => 5671
		queue => "Monitoring"
		exchange => "rabbitmq"
		user => "admin"
		password => "admin"
		heartbeat => 30
		durable => true
	}

}
filter {

	xml {
		source => "message"
		store_xml => "false"
		xpath => {
			"/message/messageType/text()" => "messageType"
		}
	}


	if [messageType][0] == "newPerson" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/userUUID/text()" => "userUUID"
				"/message/type/text()" => "type"
				"/message/firstName/text()" => "firstName"
				"/message/lastName/text()" => "lastName"
				"/message/address/text()" => "address"
				"/message/email/text()" => "email"
				"/message/isActive/text()" => "isActive"
				"/message/isAllowed/text()" => "isAllowed"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "newPayment" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/userUUID/text()" => "userUUID"
				"/message/invoiceUUID/text()" => "invoiceUUID"
				"/message/productUUID/text()" => "productUUID"
				"/message/quantity/text()" => "quantity"
				"/message/price/text()" => "price"
				"/message/totalAmountOpen/text()" => "totalAmountOpen"
				"/message/totalAmountPaid/text()" => "totalAmountPaid"
				"/message/isPaid/text()" => "isPaid"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "getInvoice" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/userUUID/text()" => "userUUID"
				"/message/invoiceUUID/text()" => "invoiceUUID"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "returnInvoice" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/userUUID/text()" => "userUUID"
				"/message/invoiceUUID/text()" => "invoiceUUID"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "newReservation" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/userUUID/text()" => "userUUID"
				"/message/visitorUUID/text()" => "visitorUUID"
				"/message/sessionUUID/text()" => "sessionUUID"
				"/message/reservationDate/text()" => "reservationDate"
				"/message/breakfast/text()" => "breakfast"
				"/message/paid/text()" => "paid"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "ping" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/from/text()" => "from"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "error" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/from/text()" => "from"
				"/message/error/text()" => "error"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "warning" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/warningMessage/text()" => "warningMessage"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "newSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/sessionUUID/text()" => "sessionUUID"
				"/message/sessionSummary/text()" => "sessionSummary"
				"/message/sessionLocation/text()" => "sessionLocation"
				"/message/sessionStartDate/text()" => "sessionStartDate"
				"/message/sessionEndDate/text()" => "sessionEndDate"
				"/message/sessionEmail/text()" => "sessionEmail"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "removeSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/sessionUUID/text()" => "sessionUUID"
				"/message/sessionID/text()" => "sessionID"
				"/message/sessionSummary/text()" => "sessionSummary"
				"/message/sessionLocation/text()" => "sessionLocation"
				"/message/sessionStartDate/text()" => "sessionStartDate"
				"/message/sessionEndDate/text()" => "sessionEndDate"
				"/message/sessionEmail/text()" => "sessionEmail"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "cancelSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/sessionUUID/text()" => "sessionUUID"
				"/message/sessionSummary/text()" => "sessionSummary"
				"/message/sessionStartDate/text()" => "sessionStartDate"
				"/message/sessionEndDate/text()" => "sessionEndDate"
				"/message/sessionEmail/text()" => "sessionEmail"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "registerSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/sessionUUID/text()" => "sessionUUID"
				"/message/sessionSummary/text()" => "sessionSummary"
				"/message/sessionStartDate/text()" => "sessionStartDate"
				"/message/sessionEndDate/text()" => "sessionEndDate"
				"/message/sessionEmail/text()" => "sessionEmail"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "editSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/sessionUUID/text()" => "sessionUUID"
				"/message/sessionID/text()" => "sessionID"
				"/message/sessionSummary/text()" => "sessionSummary"
				"/message/sessionLocation/text()" => "sessionLocation"
				"/message/sessionStartDate/text()" => "sessionStartDate"
				"/message/sessionEndDate/text()" => "sessionEndDate"
				"/message/sessionEmail/text()" => "sessionEmail"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "cancelSpeaker" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/userUUID/text()" => "userUUID"
				"/message/sessionUUID/text()" => "sessionUUID"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "newEvent" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/eventUUID/text()" => "eventUUID"
				"/message/name/text()" => "name"
				"/message/startDate/text()" => "startDate"
				"/message/endDate/text()" => "endDate"
				"/message/visitors/text()" => "visitors"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "newSpeaker" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/speakerUUID/text()" => "speakerUUID"
				"/message/title/text()" => "title"
				"/message/firstName/text()" => "firstName"
				"/message/lastName/text()" => "lastName"
				"/message/street/text()" => "street"
				"/message/number/text()" => "number"
				"/message/city/text()" => "city"
				"/message/country/text()" => "country"
				"/message/postalCode/text()" => "postalCode"
				"/message/phoneNumbers/text()" => "phoneNumbers"
				"/message/emails/text()" => "emails"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
}
output {

	if [messageType][0] == "newPerson" {
		elasticsearch {
			index => persons
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "newPayment" {
		elasticsearch {
			index => payments
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "newReservation" {
		elasticsearch {
			index => reservations
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "ping" {
		if [from][0] == "CRM" {
			elasticsearch {
				index => crm_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
		else if [from][0] == "Facturatie" {
			elasticsearch {
				index => facturatie_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
		else if [from][0] == "Frontend" {
			elasticsearch {
				index => frontend_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
		else if [from][0] == "Kassa" {
			elasticsearch {
				index => kassa_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
		else if [from][0] == "Planning" {
			elasticsearch {
				index => planning_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
	}
	else if [messageType][0] == "error" {
		elasticsearch {
			index => errors
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "warning" {
		elasticsearch {
			index => warnings
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "newSession" {
		if [version] == 1 {
			elasticsearch {
				index => sessions-test
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
		else {
			elasticsearch {
				index => sessions-test
				action => update
				document_id => "%{[eventUUID]}"
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
	}
	
	stdout { codec => rubydebug }
}
