input {

	rabbitmq {
		codec => "plain"
		host => "10.3.50.48"
		port => ""
		queue => "Monitor"
		exchange => "Integration"
		heartbeat => 30
		durable => true
	}

}
filter {

	xml {
		source => "message"
		store_xml => "false"
		xpath => {
			"/message/messageType/text()" => "messageType"
		}
	}


	if [messageType][0] == "newPerson" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/userUUID/text()" => "userUUID"
				"/message/type/text()" => "type"
				"/message/firstname/text()" => "firstname"
				"/message/lastname/text()" => "lastname"
				"/message/address/text()" => "address"
				"/message/e-mail/text()" => "e-mail"
				"/message/password/text()" => "password"
				"/message/isActive/text()" => "isActive"
				"/message/isAllowed/text()" => "isAllowed"
				"/message/roles/text()" => "roles"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "newPayment" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/userUUID/text()" => "userUUID"
				"/message/invoiceUUID/text()" => "invoiceUUID"
				"/message/productUUID/text()" => "productUUID"
				"/message/quantity/text()" => "quantity"
				"/message/price/text()" => "price"
				"/message/totalAmountOpen/text()" => "totalAmountOpen"
				"/message/totalAmountPaid/text()" => "totalAmountPaid"
				"/message/isPaid/text()" => "isPaid"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "newReservation" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/userUUID/text()" => "userUUID"
				"/message/visitorID/text()" => "visitorID"
				"/message/sessionID/text()" => "sessionID"
				"/message/reservationDate/text()" => "reservationDate"
				"/message/breakfast/text()" => "breakfast"
				"/message/paid/text()" => "paid"
				"/message/version/text()" => "version"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "ping" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/from/text()" => "from"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "error" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/from/text()" => "from"
				"/message/error/text()" => "error"
				"/message/timestamp/text()" => "timestamp"
			}
		}
	}

}
output {

	if [messageType][0] == "newPerson" {
		elasticsearch {
			index => persons
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "newPayment" {
		elasticsearch {
			index => payments
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "newReservation" {
		elasticsearch {
			index => reservations
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "ping" {
		elasticsearch {
			index => pings
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "error" {
		elasticsearch {
			index => errors
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	
	stdout { codec => rubydebug }
}
