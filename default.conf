input {

	rabbitmq {
		codec => "plain"
		host => "192.168.1.7"
		port => 5671
		queue => "Monitoring"
		exchange => "rabbitmq"
		user => "admin"
		password => "admin"
		heartbeat => 30
		durable => true
	}

}
filter {

	xml {
		source => "message"
		store_xml => "false"
		xpath => {
			"/message/messageType/text()" => "messageType"
		}
	}


	if [messageType][0] == "newPerson" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/userUUID/text()" => "userUUID"
				"/message/body/type/text()" => "type"
				"/message/body/firstName/text()" => "firstName"
				"/message/body/lastName/text()" => "lastName"
				"/message/body/address/text()" => "address"
				"/message/body/email/text()" => "email"
				"/message/body/isActive/text()" => "isActive"
				"/message/body/isAllowed/text()" => "isAllowed"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => "userUUID"
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "newPayment" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/userUUID/text()" => "userUUID"
				"/message/body/item/producten/@productUUID" => "productUUIDs"
				"/message/body/item/producten/@quantity" => "quantities"
				"/message/body/isPaid/text()" => "isPaid"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => ["userUUID", "productUUIDs"]
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "getInvoice" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/userUUID/text()" => "userUUID"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => "userUUID"
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "returnInvoice" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/userUUID/text()" => "userUUID"
				"/message/body/producten/item/@productUUID" => "productUUIDs"
				"/message/body/producten/item/@quantity" => "quantities"
				"/message/body/subTotal/text()" => "subTotal"
				"/message/body/paidToDate/text()" => "paidToDate"
				"/message/body/balance/text()" => "balance"
				"/message/body/pdfLink/text()" => "pdfLink"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => ["userUUID", "productUUIDs"]
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "newReservation" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/userUUID/text()" => "userUUID"
				"/message/body/visitorUUID/text()" => "visitorUUID"
				"/message/body/sessionUUID/text()" => "sessionUUID"
				"/message/body/reservationDate/text()" => "reservationDate"
				"/message/body/breakfast/text()" => "breakfast"
				"/message/body/paid/text()" => "paid"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => ["userUUID", "visitorUUID", "sessionUUID"]
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "ping" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/from/text()" => "from"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "error" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/from/text()" => "from"
				"/message/body/error/text()" => "error"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "warning" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/warningMessage/text()" => "warningMessage"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
	}
	else if [messageType][0] == "newSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/sessionUUID/text()" => "sessionUUID"
				"/message/body/sessionSummary/text()" => "sessionSummary"
				"/message/body/sessionLocation/text()" => "sessionLocation"
				"/message/body/sessionStartDate/text()" => "sessionStartDate"
				"/message/body/sessionEndDate/text()" => "sessionEndDate"
				"/message/body/sessionEmail/text()" => "sessionEmail"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => "sesionUUID"
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "removeSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/sessionUUID/text()" => "sessionUUID"
				"/message/body/sessionID/text()" => "sessionID"
				"/message/body/sessionSummary/text()" => "sessionSummary"
				"/message/body/sessionLocation/text()" => "sessionLocation"
				"/message/body/sessionStartDate/text()" => "sessionStartDate"
				"/message/body/sessionEndDate/text()" => "sessionEndDate"
				"/message/body/sessionEmail/text()" => "sessionEmail"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => "sessionUUID"
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "cancelSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/sessionUUID/text()" => "sessionUUID"
				"/message/body/sessionSummary/text()" => "sessionSummary"
				"/message/body/sessionStartDate/text()" => "sessionStartDate"
				"/message/body/sessionEndDate/text()" => "sessionEndDate"
				"/message/body/sessionEmail/text()" => "sessionEmail"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => "sessionUUID"
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "registerSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/sessionUUID/text()" => "sessionUUID"
				"/message/body/sessionSummary/text()" => "sessionSummary"
				"/message/body/sessionStartDate/text()" => "sessionStartDate"
				"/message/body/sessionEndDate/text()" => "sessionEndDate"
				"/message/body/sessionEmail/text()" => "sessionEmail"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => "sessionUUID"
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "editSession" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/sessionUUID/text()" => "sessionUUID"
				"/message/body/sessionID/text()" => "sessionID"
				"/message/body/sessionSummary/text()" => "sessionSummary"
				"/message/body/sessionLocation/text()" => "sessionLocation"
				"/message/body/sessionStartDate/text()" => "sessionStartDate"
				"/message/body/sessionEndDate/text()" => "sessionEndDate"
				"/message/body/sessionEmail/text()" => "sessionEmail"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => "sessionUUID"
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
	else if [messageType][0] == "cancelSpeaker" {
		xml {
			source => "message"
			store_xml => "false"
			xpath => {
				"/message/body/userUUID/text()" => "userUUID"
				"/message/body/sessionUUID/text()" => "sessionUUID"
				"/message/body/version/text()" => "version"
				"/message/body/timestamp/text()" => "timestamp"
			}
		}
		fingerprint {
			source => ["userUUID", "sessionUUID"]
			target => "[@metadata][fingerprint]"
			method => "MURMUR3"
		}
	}
}
output {

	if [messageType][0] == "newPerson" {
		elasticsearch {
			index => persons
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "newPayment" {
		elasticsearch {
			index => payments
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "getInvoice" {
		elasticsearch {
			index => getInvoices
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "returnInvoice" {
		elasticsearch {
			index => returnInvoices
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "newReservation" {
		elasticsearch {
			index => reservations
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "ping" {
		if [from][0] == "CRM" {
			elasticsearch {
				index => crm_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
		else if [from][0] == "Facturatie" {
			elasticsearch {
				index => facturatie_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
		else if [from][0] == "Frontend" {
			elasticsearch {
				index => frontend_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
		else if [from][0] == "Kassa" {
			elasticsearch {
				index => kassa_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
		else if [from][0] == "Planning" {
			elasticsearch {
				index => planning_pings
				hosts => ["192.168.1.6:9201"]
				user => "elastic"
				password => "elastic2018"
			}
		}
	}
	else if [messageType][0] == "error" {
		elasticsearch {
			index => errors
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "warning" {
		elasticsearch {
			index => warnings
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
		}
	}
	else if [messageType][0] == "newSession" {
		elasticsearch {
			index => newSessions
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "removeSession" {
		elasticsearch {
			index => removeSessions
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "cancelSession" {
		elasticsearch {
			index => cancelSessions
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "registerSession" {
		elasticsearch {
			index => registerSessions
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "editSession" {
		elasticsearch {
			index => editSessions
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	else if [messageType][0] == "cancelSpeaker" {
		elasticsearch {
			index => cancelSpeakers
			hosts => ["192.168.1.6:9201"]
			user => "elastic"
			password => "elastic2018"
			document_id => "%{[@metadata][fingerprint]}"
		}
	}
	
	stdout { codec => rubydebug }
}
